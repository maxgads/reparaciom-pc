# Configuración de nginx para Servicio Reparación PC
# Proxy reverso con SSL, seguridad avanzada y optimizaciones

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=contact:10m rate=3r/h;
limit_req_zone $binary_remote_addr zone=general:10m rate=30r/m;
limit_conn_zone $binary_remote_addr zone=perip:10m;

# Map para bloquear user agents maliciosos
map $http_user_agent $blocked_agent {
    default 0;
    ~*bot 1;
    ~*spider 1;
    ~*crawler 1;
    ~*scan 1;
    ~*hack 1;
    ~*malware 1;
    "" 1;  # Empty user agent
}

# Map para bloquear referers sospechosos
map $http_referer $blocked_referer {
    default 0;
    ~*spam 1;
    ~*casino 1;
    ~*adult 1;
    ~*malware 1;
}

# Redirección HTTP a HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name _;
    
    # Permitir Let's Encrypt challenge
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/html;
        try_files $uri =404;
    }
    
    # Redirección permanente a HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Configuración principal HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name DOMAIN_PLACEHOLDER;
    
    # Logging
    access_log /var/log/nginx/reparacion_access.log;
    error_log /var/log/nginx/reparacion_error.log warn;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/privkey.pem;
    
    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://www.google.com https://www.gstatic.com https://www.recaptcha.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self'; frame-src https://www.google.com;" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Ocultar información del servidor
    server_tokens off;
    more_set_headers "Server: Apache";
    
    # Límites de conexión
    limit_conn perip 10;
    
    # Bloquear user agents y referers maliciosos
    if ($blocked_agent) {
        return 403;
    }
    if ($blocked_referer) {
        return 403;
    }
    
    # Root y archivos de índice
    root /var/www/html;
    index index.html index.htm;
    
    # Compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types
        application/javascript
        application/json
        application/xml
        application/xml+rss
        application/x-javascript
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Archivos estáticos con cache
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Servir desde frontend si existe
        try_files $uri @backend;
    }
    
    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        expires 1y;
        try_files $uri @backend;
    }
    
    # Robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
        try_files $uri @backend;
    }
    
    # API endpoints con rate limiting estricto
    location /api/contact {
        limit_req zone=contact burst=1 nodelay;
        limit_req_status 429;
        
        # Headers adicionales para la API
        add_header X-Rate-Limit "3 requests per hour" always;
        
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout configuraciones
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Otros endpoints de API con rate limiting general
    location /api/ {
        limit_req zone=general burst=10 nodelay;
        limit_req_status 429;
        
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout configuraciones
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Página principal y archivos estáticos
    location / {
        limit_req zone=general burst=20 nodelay;
        
        # Intentar servir archivo estático primero, luego proxy
        try_files $uri $uri/ @backend;
    }
    
    # Proxy al backend de Node.js
    location @backend {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout configuraciones
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Health check endpoint (sin rate limiting)
    location = /api/health {
        access_log off;
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Bloquear acceso a archivos sensibles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|log|sql|bak)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /(config|database|logs|backups)/ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Bloquear algunos user agents maliciosos específicos
    location ~ /(wp-admin|admin|phpmyadmin|xmlrpc\.php) {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }
    
    # Páginas de error personalizadas
    error_page 403 /error/403.html;
    error_page 404 /error/404.html;
    error_page 429 /error/429.html;
    error_page 500 502 503 504 /error/50x.html;
    
    location ^~ /error/ {
        internal;
        root /var/www/html;
    }
}

# Configuración adicional para múltiples dominios (si es necesario)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.DOMAIN_PLACEHOLDER;
    
    # SSL Configuration (mismo certificado)
    ssl_certificate /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/privkey.pem;
    
    # Redirección a dominio principal sin www
    return 301 https://DOMAIN_PLACEHOLDER$request_uri;
}